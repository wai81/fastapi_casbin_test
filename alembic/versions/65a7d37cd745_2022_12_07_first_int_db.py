"""'2022_12_07_first_int_db'

Revision ID: 65a7d37cd745
Revises: 
Create Date: 2022-12-07 10:14:04.673544

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision = '65a7d37cd745'
down_revision = None
branch_labels = None
depends_on = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('organization',
    sa.Column('created_at', sa.TIMESTAMP(timezone=True), nullable=True),
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=100), nullable=False),
    sa.Column('fullname', sa.String(length=300), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_organization_id'), 'organization', ['id'], unique=False)
    op.create_index(op.f('ix_organization_name'), 'organization', ['name'], unique=False)
    op.create_table('subunit',
    sa.Column('created_at', sa.TIMESTAMP(timezone=True), nullable=True),
    sa.Column('id', postgresql.UUID(as_uuid=True), nullable=False),
    sa.Column('name', sa.String(length=60), nullable=False),
    sa.Column('color_subunit', sa.String(length=30), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_subunit_name'), 'subunit', ['name'], unique=False)
    op.create_table('bookingtransport',
    sa.Column('created_at', sa.TIMESTAMP(timezone=True), nullable=True),
    sa.Column('id', postgresql.UUID(as_uuid=True), nullable=False),
    sa.Column('title', sa.String(length=200), nullable=False),
    sa.Column('startDate', sa.TIMESTAMP(), nullable=True),
    sa.Column('endDate', sa.TIMESTAMP(), nullable=True),
    sa.Column('allDay', sa.Boolean(), nullable=True),
    sa.Column('details', sa.String(length=300), nullable=True),
    sa.Column('subunit_id', postgresql.UUID(as_uuid=True), nullable=True),
    sa.ForeignKeyConstraint(['subunit_id'], ['subunit.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('receipt',
    sa.Column('created_at', sa.TIMESTAMP(timezone=True), nullable=True),
    sa.Column('id', postgresql.UUID(as_uuid=True), nullable=False),
    sa.Column('personal_account', sa.String(length=16), nullable=True),
    sa.Column('order', sa.String(length=21), nullable=True),
    sa.Column('last_name', sa.String(length=30), nullable=True),
    sa.Column('first_name', sa.String(length=30), nullable=True),
    sa.Column('patronymic', sa.String(length=30), nullable=True),
    sa.Column('citi', sa.String(length=30), nullable=True),
    sa.Column('street', sa.String(length=30), nullable=True),
    sa.Column('house', sa.String(length=18), nullable=True),
    sa.Column('building', sa.String(length=10), nullable=True),
    sa.Column('apartment', sa.String(length=10), nullable=True),
    sa.Column('debt', sa.Float(), nullable=True),
    sa.Column('payment_state_duty', sa.Integer(), nullable=True),
    sa.Column('status', sa.Integer(), nullable=True),
    sa.Column('tor_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['tor_id'], ['organization.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('user',
    sa.Column('created_at', sa.TIMESTAMP(timezone=True), nullable=True),
    sa.Column('id', postgresql.UUID(as_uuid=True), nullable=False),
    sa.Column('last_name', sa.String(length=30), nullable=True),
    sa.Column('first_name', sa.String(length=30), nullable=True),
    sa.Column('patronymic', sa.String(length=30), nullable=True),
    sa.Column('username', sa.String(), nullable=False),
    sa.Column('is_superuser', sa.Boolean(), nullable=True),
    sa.Column('is_active', sa.Boolean(), nullable=True),
    sa.Column('hashed_password', sa.String(), nullable=False),
    sa.Column('organization_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['organization_id'], ['organization.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_user_username'), 'user', ['username'], unique=False)
    op.create_table('order',
    sa.Column('created_at', sa.TIMESTAMP(timezone=True), nullable=True),
    sa.Column('id', postgresql.UUID(as_uuid=True), nullable=False),
    sa.Column('order_no', sa.String(length=16), nullable=True),
    sa.Column('citi', sa.String(length=30), nullable=True),
    sa.Column('street', sa.String(length=30), nullable=True),
    sa.Column('house', sa.String(length=18), nullable=True),
    sa.Column('building', sa.String(length=10), nullable=True),
    sa.Column('apartment', sa.String(length=10), nullable=True),
    sa.Column('organization_id', sa.Integer(), nullable=True),
    sa.Column('order_creator_id', postgresql.UUID(as_uuid=True), nullable=True),
    sa.ForeignKeyConstraint(['order_creator_id'], ['user.id'], ),
    sa.ForeignKeyConstraint(['organization_id'], ['organization.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('user_access_tor',
    sa.Column('created_at', sa.TIMESTAMP(timezone=True), nullable=True),
    sa.Column('id', postgresql.UUID(as_uuid=True), nullable=False),
    sa.Column('user_id', postgresql.UUID(as_uuid=True), nullable=False),
    sa.Column('organization_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['organization_id'], ['organization.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_user_access_tor_id'), 'user_access_tor', ['id'], unique=False)
    op.create_index(op.f('ix_user_access_tor_organization_id'), 'user_access_tor', ['organization_id'], unique=False)
    op.create_index(op.f('ix_user_access_tor_user_id'), 'user_access_tor', ['user_id'], unique=False)
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f('ix_user_access_tor_user_id'), table_name='user_access_tor')
    op.drop_index(op.f('ix_user_access_tor_organization_id'), table_name='user_access_tor')
    op.drop_index(op.f('ix_user_access_tor_id'), table_name='user_access_tor')
    op.drop_table('user_access_tor')
    op.drop_table('order')
    op.drop_index(op.f('ix_user_username'), table_name='user')
    op.drop_table('user')
    op.drop_table('receipt')
    op.drop_table('bookingtransport')
    op.drop_index(op.f('ix_subunit_name'), table_name='subunit')
    op.drop_table('subunit')
    op.drop_index(op.f('ix_organization_name'), table_name='organization')
    op.drop_index(op.f('ix_organization_id'), table_name='organization')
    op.drop_table('organization')
    # ### end Alembic commands ###
